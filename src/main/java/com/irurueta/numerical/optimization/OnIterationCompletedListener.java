/*
 * Copyright (C) 2021 Alberto Irurueta Carro (alberto@irurueta.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.irurueta.numerical.optimization;

/**
 * Notifies of events generated by an optimizer.
 */
public interface OnIterationCompletedListener {

  /**
   * Called when an iteration is completed.
   *
   * @param optimizer optimizer that raised the event.
   * @param iteration number of iterations that have been executed.
   * @param maxIterations maximum number of iterations to be executed, or null if unknown.
   */
  void onIterationCompleted(final Optimizer optimizer, int iteration, Integer maxIterations);
}
